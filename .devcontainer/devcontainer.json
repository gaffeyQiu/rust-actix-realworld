// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.238.0/containers/docker-existing-dockerfile
{
	"name": "real world",

	"dockerComposeFile": "docker-compose.yml",

	"service": "real-world",

	"workspaceFolder": "/app",
	// Sets the run context to one level up instead of the .devcontainer folder.
	// "context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	// "dockerFile": "../Dockerfile.dev",

	"customizations": {
		"vscode": {
			"extensions": [
				"rust-lang.rust-analyzer",
				"serayuzgur.crates",
				"ms-azuretools.vscode-docker",
				"bungcip.better-toml"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [8080],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=${localWorkspaceFolder}/, target=/app, type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "root"
}
